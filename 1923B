#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef tree<int, null_type, less<int>, rb_tree_tag,
            tree_order_statistics_node_update>
    ordered_set;
#define ll  long long int
int main(){
    ll tt;
    tt=1;
    cin>>tt;
    while(tt--){
        ll n,k;
        cin>>n>>k;
        ll a[n],d[n];
        for(ll i=0;i<n;i++) cin>>a[i];
        for(ll i=0;i<n;i++) cin>>d[i];
        map<ll,ll>mp;
        for(ll i=0;i<n;i++){
            if(d[i]<0) d[i]=abs(d[i]);
            mp[d[i]]+=a[i];
        }
        vector<pair<ll,ll>>vp;
        for(auto it=mp.begin();it!=mp.end();it++){
            vp.push_back({it->first,it->second});
        }
        bool ch=true;
        ll i=0,bullet=k,kk=0;
        while(i<vp.size()){
            //cout<<vp[i].first<<" "<<vp[i].second<<endl;
            if(vp[i].first-kk<=0){
                ch=false;
                break;
            }
            if(bullet>vp[i].second){
                bullet-=vp[i].second;
                i++;
            }
            else if(bullet==vp[i].second){
                bullet=k;
                kk++;
                i++;
            }
            else{
                vp[i].second-=bullet;
                bullet=k;
                kk++;
            }
        }
        if(ch) cout<<"YES\n";
        else cout<<"NO\n";
    }
}
