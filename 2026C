#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef tree<int, null_type, less<int>, rb_tree_tag,
             tree_order_statistics_node_update>
    ordered_set;
#define ll long long int

int main() {
    ll tt;
    cin >> tt;
    while (tt--) {
        ll n;
        cin >> n;

        string s;
        cin >> s;
        ll ans = 0;
        vector<ll> one, zero;

        // Fill the `one` and `zero` vectors
        for (ll i = 0; i < n; i++) {
            if (s[i] == '0') {
                zero.push_back(i + 1);
                ans += (i + 1); // Sum of indices for zeros
            } else {
                one.push_back(i + 1);
            }
        }

        ll i=-1,j=-1;
        //cout<<one.size()<<" "<<zero.size()<<endl;
        i=one.size();
        j=zero.size();
       // cout<<i<<" "<<j<<endl;
        // Match and remove elements from `one` and `zero`
        while (i >= 1 && j >= 1) {
            if(i<0||j<0) break;
            if (one[i-1] > zero[j-1]) {
                i--;
                j--;
            } else {
                j--;
            }
        }

        // Add half of the remaining elements in `one`
        for (ll k = 0; k < ((i+1) / 2); k++) {
            ans += one[k];
        }

        cout << ans << endl;
    }
    return 0;
}
